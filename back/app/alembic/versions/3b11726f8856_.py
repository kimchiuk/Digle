"""empty message

Revision ID: 3b11726f8856
Revises: 
Create Date: 2024-02-06 15:04:41.523548

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b11726f8856'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_internal_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_room_info_host_name', table_name='room_info')
    op.drop_index('ix_room_info_id', table_name='room_info')
    op.drop_index('ix_room_info_invite_code', table_name='room_info')
    op.drop_index('ix_room_info_room_num', table_name='room_info')
    op.drop_table('room_info')
    op.drop_table('business_users')
    op.drop_index('ix_email_verifications_email', table_name='email_verifications')
    op.drop_index('ix_email_verifications_id', table_name='email_verifications')
    op.drop_index('ix_email_verifications_verification_code', table_name='email_verifications')
    op.drop_table('email_verifications')
    op.drop_index('ix_password_reset_verifications_id', table_name='password_reset_verifications')
    op.drop_index('ix_password_reset_verifications_verification_code', table_name='password_reset_verifications')
    op.drop_table('password_reset_verifications')
    op.drop_table('room_participants')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room_participants',
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room_info.id'], name='room_participants_room_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='room_participants_user_id_fkey'),
    sa.PrimaryKeyConstraint('room_id', 'user_id', name='room_participants_pkey')
    )
    op.create_table('password_reset_verifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('verification_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='password_reset_verifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='password_reset_verifications_pkey')
    )
    op.create_index('ix_password_reset_verifications_verification_code', 'password_reset_verifications', ['verification_code'], unique=False)
    op.create_index('ix_password_reset_verifications_id', 'password_reset_verifications', ['id'], unique=False)
    op.create_table('email_verifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('verification_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='email_verifications_pkey')
    )
    op.create_index('ix_email_verifications_verification_code', 'email_verifications', ['verification_code'], unique=False)
    op.create_index('ix_email_verifications_id', 'email_verifications', ['id'], unique=False)
    op.create_index('ix_email_verifications_email', 'email_verifications', ['email'], unique=True)
    op.create_table('business_users',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], name='business_users_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='business_users_pkey')
    )
    op.create_table('room_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('room_num', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('host_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('room_type', postgresql.ENUM('TestRoom', 'Room', name='room_type_enum'), autoincrement=False, nullable=True),
    sa.Column('invite_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('host_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], name='room_info_host_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='room_info_pkey')
    )
    op.create_index('ix_room_info_room_num', 'room_info', ['room_num'], unique=True)
    op.create_index('ix_room_info_invite_code', 'room_info', ['invite_code'], unique=False)
    op.create_index('ix_room_info_id', 'room_info', ['id'], unique=False)
    op.create_index('ix_room_info_host_name', 'room_info', ['host_name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('internal_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_type', postgresql.ENUM('Standard', 'Business', name='user_type_enum'), autoincrement=False, nullable=True),
    sa.Column('is_additional_info_provided', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('auth_provider', postgresql.ENUM('Google', 'Naver', 'Kakao', 'None', name='oauth_provier_enum'), autoincrement=False, nullable=True),
    sa.Column('auth_provider_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('profile_picture_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_internal_id', 'users', ['internal_id'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    # ### end Alembic commands ###
