sudo bash -c "apt-get update && apt-get install -y \
    build-essential \
    snapd \
    aptitude \
    git \
    wget \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    ninja-build \
    libgstreamer1.0-dev \
    libgirepository1.0-dev \
    libunwind-dev \
    apt-utils \
    gdb \
    libmicrohttpd-dev \
    libjansson-dev \
    libnice-dev \
    libssl-dev \
    libsofia-sip-ua-dev \
    libglib2.0-dev \
    libopus-dev \
    libogg-dev \
    libconfig-dev \
    libavutil-dev \
    libavcodec-dev \
    libavformat-dev \
    libnanomsg-dev \
    libcurl4-openssl-dev \
    liblua5.3-dev \
    pkg-config \
    gengetopt \
    libtool \
    automake \
    curl \
    jq \
    httpie \
    vim \
    screen \
    doxygen \
    graphviz \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*"

sudo python3 -m pip install meson ninja

sudo bash -c "wget https://go.dev/dl/go1.21.6.linux-amd64.tar.gz \
    && rm -rf /usr/local/go \
    && tar -C /usr/local -xzf go1.21.6.linux-amd64.tar.gz"
sudo PATH $PATH:/usr/local/go/bin

sudo bash -c "cd / \
    && git clone https://gitlab.freedesktop.org/libnice/libnice \
    && cd libnice \
    && meson --prefix=/usr build && ninja -C build && ninja -C build install"




sudo bash -c "cd / \
    && wget https://github.com/cisco/libsrtp/archive/v2.5.0.tar.gz \
    && tar xfv v2.5.0.tar.gz \
    && cd libsrtp-2.5.0/ \
    && ./configure --prefix=/usr --enable-openssl \
    && make shared_library && make install"

sudo bash -c "cd / \
    && git clone https://boringssl.googlesource.com/boringssl \
    && cd boringssl \
    && sed -i s/" -Werror"//g CMakeLists.txt \
    && mkdir -p build \
    && cd build \
    && apt-get update && apt-get install -y cmake \
    && cmake -DCMAKE_CXX_FLAGS="-lrt" .. \
    && make \
    && cd .. \
    && mkdir -p /opt/boringssl \
    && cp -R include /opt/boringssl/ \
    && mkdir -p /opt/boringssl/lib \
    && cp build/ssl/libssl.a /opt/boringssl/lib/ \
    && cp build/crypto/libcrypto.a /opt/boringssl/lib/"

sudo bash -c "cd / \
    && git clone https://github.com/sctplab/usrsctp \
    && cd usrsctp \
    && ./bootstrap \
    && ./configure --prefix=/usr --disable-programs --disable-inet --disable-inet6 \
    && make && make install"

sudo bash -c "cd / \
    && git clone https://libwebsockets.org/repo/libwebsockets \
    && cd libwebsockets \
    # If you want the stable version of libwebsockets, uncomment the next line
    # git checkout v4.3-stable
    && mkdir build \
    && cd build \
    # See https://github.com/meetecho/janus-gateway/issues/732 re: LWS_MAX_SMP
    # See https://github.com/meetecho/janus-gateway/issues/2476 re: LWS_WITHOUT_EXTENSIONS
    && cmake -DLWS_MAX_SMP=1 -DLWS_WITHOUT_EXTENSIONS=0 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" .. \
    && make && make install"

sudo bash -c "cd / \
    && git clone https://github.com/eclipse/paho.mqtt.c.git \
    && cd paho.mqtt.c \
    && make && make install"

sudo bash -c "cd / \
    && aptitude install libnanomsg-dev"

sudo bash -c "cd / \
    && git clone https://github.com/alanxz/rabbitmq-c \
    && cd rabbitmq-c \
    && git submodule init \
    && git submodule update \
    && mkdir build && cd build \
    && cmake -DCMAKE_INSTALL_PREFIX=/usr .. \
    && make && make install"

sudo bash -c "cd / \
    && aptitude install doxygen graphviz"

# Janus WebRTC 서버 소스 코드 복제
sudo bash -c "cd / \
    && git clone https://github.com/meetecho/janus-gateway.git"

# Janus 컴파일 및 설치
sudo bash -c "cd /janus-gateway \
    && sh autogen.sh \
    && ./configure --prefix=/opt/janus \
    && make \
    && make install \
    && make configs \
    # 밑에 두개 취향
    && ./configure --enable-docs \
    && ./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-mqtt"

sudo bash -c "rm -rf \
    /libnice \
    /libsrtp-2.5.0 \
    /v2.5.0.tar.gz \
    /boringssl \
    /usrsctp \
    /libwebsockets \
    /paho.mqtt.c \
    /rabbitmq-c \
    /janus-gateway"

sudo /opt/janus/bin/janus